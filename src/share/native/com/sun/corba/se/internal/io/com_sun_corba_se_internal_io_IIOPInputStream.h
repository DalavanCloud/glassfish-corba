/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License. You can obtain
 * a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 * or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 * Sun designates this particular file as subject to the "Classpath" exception
 * as provided by Sun in the GPL Version 2 section of the License file that
 * accompanied this code.  If applicable, add the following below the License
 * Header, with the fields enclosed by brackets [] replaced by your own
 * identifying information: "Portions Copyrighted [year]
 * [name of copyright owner]"
 *
 * Contributor(s):
 *
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sun_corba_se_internal_io_IIOPInputStream */

#ifndef _Included_com_sun_corba_se_internal_io_IIOPInputStream
#define _Included_com_sun_corba_se_internal_io_IIOPInputStream
#ifdef __cplusplus
extern "C" {
#endif
#undef com_sun_corba_se_internal_io_IIOPInputStream_SKIP_BUFFER_SIZE
#define com_sun_corba_se_internal_io_IIOPInputStream_SKIP_BUFFER_SIZE 2048L
/* Inaccessible static: skipBuffer */
#undef com_sun_corba_se_internal_io_IIOPInputStream_NULL_HANDLE
#define com_sun_corba_se_internal_io_IIOPInputStream_NULL_HANDLE -1L
/* Inaccessible static: unsharedMarker */
/* Inaccessible static: primClasses */
/* Inaccessible static: subclassAudits */
/* Inaccessible static: class_00024java_00024io_00024ObjectInputStream */
/* Inaccessible static: class_00024java_00024lang_00024Object */
/* Inaccessible static: kRemoteTypeCode */
/* Inaccessible static: kValueTypeCode */
#undef com_sun_corba_se_internal_io_IIOPInputStream_useFVDOnly
#define com_sun_corba_se_internal_io_IIOPInputStream_useFVDOnly 0L
/* Inaccessible static: class_00024java_00024lang_00024ClassNotFoundException */
/* Inaccessible static: class_00024java_00024io_00024IOException */
/* Inaccessible static: class_00024java_00024io_00024NotActiveException */
/* Inaccessible static: class_00024java_00024rmi_00024Remote */
/* Inaccessible static: class_00024org_00024omg_00024CORBA_00024Object */
/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    allocateNewObject
 * Signature: (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_allocateNewObject
  (JNIEnv *, jclass, jclass, jclass);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    throwExceptionType
 * Signature: (Ljava/lang/Class;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_throwExceptionType
  (JNIEnv *, jclass, jclass, jstring);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setObjectField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setObjectField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jobject);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setBooleanField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setBooleanField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jboolean);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setByteField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;B)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setByteField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jbyte);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setCharField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;C)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setCharField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jchar);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setShortField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;S)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setShortField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jshort);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setIntField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setIntField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jint);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setLongField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setLongField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jlong);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setFloatField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;F)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setFloatField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jfloat);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setDoubleField
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;D)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setDoubleField
  (JNIEnv *, jclass, jobject, jclass, jstring, jstring, jdouble);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    readObject
 * Signature: (Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_readObject
  (JNIEnv *, jclass, jobject, jclass, jobject);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setObjectFieldOpt
 * Signature: (Ljava/lang/Object;JLjava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setObjectFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jobject);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setBooleanFieldOpt
 * Signature: (Ljava/lang/Object;JZ)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setBooleanFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jboolean);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setByteFieldOpt
 * Signature: (Ljava/lang/Object;JB)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setByteFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jbyte);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setCharFieldOpt
 * Signature: (Ljava/lang/Object;JC)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setCharFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jchar);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setShortFieldOpt
 * Signature: (Ljava/lang/Object;JS)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setShortFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jshort);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setIntFieldOpt
 * Signature: (Ljava/lang/Object;JI)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setIntFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jint);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setLongFieldOpt
 * Signature: (Ljava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setLongFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jlong);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setFloatFieldOpt
 * Signature: (Ljava/lang/Object;JF)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setFloatFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jfloat);

/*
 * Class:     com_sun_corba_se_internal_io_IIOPInputStream
 * Method:    setDoubleFieldOpt
 * Signature: (Ljava/lang/Object;JD)V
 */
JNIEXPORT void JNICALL Java_com_sun_corba_se_internal_io_IIOPInputStream_setDoubleFieldOpt
  (JNIEnv *, jclass, jobject, jlong, jdouble);

#ifdef __cplusplus
}
#endif
#endif
