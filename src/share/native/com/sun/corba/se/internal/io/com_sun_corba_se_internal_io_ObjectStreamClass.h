/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License. You can obtain
 * a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 * or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 * Sun designates this particular file as subject to the "Classpath" exception
 * as provided by Sun in the GPL Version 2 section of the License file that
 * accompanied this code.  If applicable, add the following below the License
 * Header, with the fields enclosed by brackets [] replaced by your own
 * identifying information: "Portions Copyrighted [year]
 * [name of copyright owner]"
 *
 * Contributor(s):
 *
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sun_corba_se_internal_io_ObjectStreamClass */

#ifndef _Included_com_sun_corba_se_internal_io_ObjectStreamClass
#define _Included_com_sun_corba_se_internal_io_ObjectStreamClass
#ifdef __cplusplus
extern "C" {
#endif
#undef com_sun_corba_se_internal_io_ObjectStreamClass_kDefaultUID
#define com_sun_corba_se_internal_io_ObjectStreamClass_kDefaultUID -1LL
/* Inaccessible static: noArgsList */
/* Inaccessible static: noTypesList */
/* Inaccessible static: translatedFields */
/* Inaccessible static: descriptorFor */
/* Inaccessible static: classSerializable */
/* Inaccessible static: classExternalizable */
#undef com_sun_corba_se_internal_io_ObjectStreamClass_serialVersionUID
#define com_sun_corba_se_internal_io_ObjectStreamClass_serialVersionUID -6120832682080437368LL
/* Inaccessible static: NO_FIELDS */
/* Inaccessible static: compareClassByName */
/* Inaccessible static: compareObjStrFieldsByName */
/* Inaccessible static: compareMemberByName */
/* Inaccessible static: class_00024java_00024io_00024ObjectOutputStream */
/* Inaccessible static: class_00024java_00024io_00024ObjectInputStream */
/* Inaccessible static: class_00024java_00024lang_00024String */
/* Inaccessible static: class_00024java_00024lang_00024Class */
/* Inaccessible static: class_00024java_00024io_00024Serializable */
/* Inaccessible static: class_00024java_00024io_00024Externalizable */
/*
 * Class:     com_sun_corba_se_internal_io_ObjectStreamClass
 * Method:    hasStaticInitializer
 * Signature: (Ljava/lang/Class;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_sun_corba_se_internal_io_ObjectStreamClass_hasStaticInitializer
  (JNIEnv *, jclass, jclass);

#ifdef __cplusplus
}
#endif
#endif
